//load dữ liệu lên
        private void Form1_Load(object sender, EventArgs e)
        {
            //dgvSupplier.DataSource = context.Suppliers.ToList();
            dgvSupplier.DataSource = (from x in context.Suppliers
                                      select new
                                      {
                                          x.SupplierId,
                                          x.CompanyName,
                                          x.ContactName,
                                          x.ContactTitle,
                                          x.Phone,
                                          x.HomePage
                                      }
                                     ).ToList();
	// lấy dữ liệu từ database đẩy vào combobox (distinct)
            cbContactTitle.DataSource = context.Suppliers.Select(x => x.ContactTitle).Distinct().ToList();
        }


//Load dữ liệu (Có join, where, orderby)
        private void Form1_Load(object sender, EventArgs e)
        {
            //dgvData.DataSource = context.Employees.ToList();
            dgvData.DataSource = (
                                  from d in context.Departments
                                  join emp in context.Employees
                                  on d.DepartmentId equals emp.DepartmentId
                                  //   where d.DepartmentName.Equals("IT")
				  // order by ...
                                  select new
                                  {
                                      emp.EmployeeId,
                                      emp.EmployeeName,
                                      d.DepartmentName,
                                  }
                                ).ToList();

        }


// tách thành hàm riêng, để mỗi lần thao tác (add,delete) gọi lại cho tiện
 	public void loadData()
        {
	    //dgvSupplier.DataSource = context.Suppliers.toList();
            dgvSupplier.DataSource = (from x in context.Suppliers
                                      select new
                                      {
                                          x.SupplierId,
                                          x.CompanyName,
                                          x.ContactName,
                                          x.ContactTitle,
                                          x.Phone,
                                          x.HomePage
                                      }
                                   ).ToList();

        }


// get 1 obj mà người dùng input
        public Supplier GetSupplier()
        {
            Supplier sup = new Supplier();
            //  sup.SupplierId = int.Parse(tbSupId.Text); // khong can, do add khong nhap id de ma format
            sup.CompanyName = tbCompanyName.Text;
            sup.ContactName = tbContactName.Text;
            sup.ContactTitle = cbContactTitle.SelectedItem.ToString();
            sup.Phone = tbPhone.Text;
            sup.HomePage = tbHomepage.Text;

            return sup;
        }

// CellContextClick
        private void dgvSupplier_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex < 0 || e.ColumnIndex < 0)
            {
                return;
            }
            tbSupId.Text = dgvSupplier.Rows[e.RowIndex].Cells[0].FormattedValue.ToString();
            tbCompanyName.Text = dgvSupplier.Rows[e.RowIndex].Cells[1].FormattedValue.ToString();
            tbContactName.Text = dgvSupplier.Rows[e.RowIndex].Cells[2].FormattedValue.ToString();
            cbContactTitle.SelectedItem = dgvSupplier.Rows[e.RowIndex].Cells[3].FormattedValue.ToString();
            tbPhone.Text = dgvSupplier.Rows[e.RowIndex].Cells[4].FormattedValue.ToString();
            tbHomepage.Text = dgvSupplier.Rows[e.RowIndex].Cells[5].FormattedValue.ToString();
        }




// Add

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                Supplier newSup = GetSupplier();
                context.Suppliers.Add(newSup);
                context.SaveChanges();
                loadData();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }


//Update
        private void btnUpdate_Click(object sender, EventArgs e)
        {
            try
            {
                // lay thong tin tu ng dung input
                int id = int.Parse(tbSupId.Text);
                Supplier supNewInfo = GetSupplier();

                // lay ra sup can update
                Supplier updateSup = context.Suppliers.FirstOrDefault(x => x.SupplierId == id);

                //update
                updateSup.CompanyName = supNewInfo.CompanyName;
                updateSup.ContactTitle = supNewInfo.ContactTitle;
                updateSup.ContactName = supNewInfo.ContactName;
                updateSup.Phone = supNewInfo.Phone;
                updateSup.HomePage = supNewInfo.HomePage;

                context.SaveChanges();
                loadData();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

//Delete

        private void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                int id = int.Parse(tbSupId.Text);
                context.Database.ExecuteSqlRaw($"Update Products set SupplierID = null  Where SupplierID = {id}");
                context.Database.ExecuteSqlRaw($"delete from Suppliers where SupplierID = {id}");

                loadData();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

//Refresh
        private void btnRefresh_Click(object sender, EventArgs e)
        {
            tbSupId.Text = String.Empty;
            tbCompanyName.Text = String.Empty;
            tbContactName.Text = String.Empty;
            cbContactTitle.SelectedIndex = 0;
            tbPhone.Text = String.Empty;
            tbHomepage.Text = String.Empty;
        }


//Search(Text Changed)
        private void tbSearch_TextChanged(object sender, EventArgs e)
        {
            String txt = tbSearch.Text;
            dgvData.DataSource = (
                            from d in context.Departments
                            join emp in context.Employees
                            on d.DepartmentId equals emp.DepartmentId
                            where emp.EmployeeName.Contains(txt)
                            orderby emp.EmployeeId descending
                            select new
                            {
                                emp.EmployeeId,
                                emp.EmployeeName,
                                d.DepartmentName,
                            }
                          ).ToList();
        }